---
kind: pipeline
type: docker
name: test

platform:
  os: linux
  arch: amd64

steps:
- name: unit test app
  image: golang
  commands:
  - curl https://gotest-release.s3.amazonaws.com/gotest_linux > gotest && chmod +x gotest
  - ./gotest ./... -v
---
kind: pipeline
type: docker
name: build

platform:
  os: linux
  arch: amd64

steps:
- name: build and push image to Docker hub
  image: plugins/docker
  password:
      from_secret: DOCKER_HUB_PWD
  settings: 
    username: gregentoo
    password:
      from_secret: DOCKER_HUB_PWD
    repo: gregentoo/remindme
    tags:
      - latest
      - ${DRONE_COMMIT_SHA}
  when:
    branch:
    - main
depends_on:
  - test
---
kind: pipeline
type: docker
name: deploy

platform:
  os: linux
  arch: amd64

steps:
- name: build/push Docker image
  image: plugins/docker
  password:
      from_secret: DOCKER_HUB_PWD
  settings: 
    username: gregentoo
    password:
      from_secret: DOCKER_HUB_PWD
    repo: gregentoo/remindme
    tags:
      - latest
      - ${DRONE_COMMIT_SHA}
  when:
    branch:
    - main
- name: deploy
  image: curlimages/curl
  environment:
    DEPLOYER_AUTH_TOKEN:
      from_secret: DEPLOYER_AUTH_TOKEN 
    DEPLOYER_ENDPOINT:
      from_secret: DEPLOYER_ENDPOINT
  commands:
  - curl -X POST --data '{"project":"remindme"}' -H "Content-Type:application/json"  -H "Authorization:Bearer $DEPLOYER_AUTH_TOKEN" $DEPLOYER_ENDPOINT"
  when:
    branch:
    - main
depends_on:
  - test
  - build